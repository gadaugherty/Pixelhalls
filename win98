<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Windows 98 Desktop</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'MS Sans Serif', sans-serif;
            font-size: 11px;
            background: #018281;
            height: 100vh;
            overflow: hidden;
            cursor: default;
            user-select: none;
        }

        .desktop {
            height: calc(100vh - 30px);
            position: relative;
            background: linear-gradient(45deg, #018281 25%, #008080 25%, #008080 50%, #018281 50%, #018281 75%, #008080 75%);
            background-size: 2px 2px;
        }

        .desktop-icon {
            position: absolute;
            width: 64px;
            height: 80px;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 4px;
            cursor: pointer;
            border-radius: 2px;
        }

        .desktop-icon:hover {
            background: rgba(0, 0, 255, 0.2);
        }

        .desktop-icon.selected {
            background: rgba(0, 0, 255, 0.3);
        }

        .icon-image {
            width: 32px;
            height: 32px;
            margin-bottom: 4px;
            background: #c0c0c0;
            border: 1px solid #808080;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
        }

        .icon-label {
            color: white;
            text-align: center;
            font-size: 11px;
            text-shadow: 1px 1px 1px black;
            word-wrap: break-word;
            line-height: 12px;
        }

        .taskbar {
            height: 30px;
            background: #c0c0c0;
            border-top: 1px solid #white;
            display: flex;
            align-items: center;
            padding: 2px;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
        }

        .start-button {
            height: 26px;
            padding: 0 8px;
            background: #c0c0c0;
            border: 2px outset #c0c0c0;
            display: flex;
            align-items: center;
            cursor: pointer;
            font-weight: bold;
            margin-right: 4px;
        }

        .start-button:active, .start-button.active {
            border: 2px inset #c0c0c0;
        }

        .start-button::before {
            content: "üèÅ";
            margin-right: 4px;
        }

        .taskbar-tasks {
            flex: 1;
            height: 26px;
            display: flex;
            gap: 2px;
        }

        .task-button {
            height: 26px;
            padding: 0 8px;
            background: #c0c0c0;
            border: 2px outset #c0c0c0;
            cursor: pointer;
            display: flex;
            align-items: center;
            min-width: 120px;
            max-width: 200px;
        }

        .task-button.active {
            border: 2px inset #c0c0c0;
            background: #e0e0e0;
        }

        .system-tray {
            height: 26px;
            background: #c0c0c0;
            border: 1px inset #c0c0c0;
            padding: 0 8px;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .start-menu {
            position: fixed;
            bottom: 30px;
            left: 2px;
            width: 200px;
            background: #c0c0c0;
            border: 2px outset #c0c0c0;
            display: none;
            z-index: 1000;
        }

        .start-menu.show {
            display: block;
        }

        .start-menu-header {
            background: linear-gradient(90deg, #0000ff, #8080ff);
            color: white;
            padding: 8px;
            font-weight: bold;
            writing-mode: vertical-lr;
            text-orientation: mixed;
            width: 24px;
            float: left;
            height: 100%;
        }

        .start-menu-items {
            margin-left: 24px;
            padding: 4px 0;
        }

        .start-menu-item {
            padding: 4px 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

        .start-menu-item:hover {
            background: #0000ff;
            color: white;
        }

        .start-menu-item::before {
            content: "üìÅ";
            margin-right: 8px;
            width: 16px;
        }

        .window {
            position: absolute;
            background: #c0c0c0;
            border: 2px outset #c0c0c0;
            min-width: 300px;
            min-height: 200px;
            display: none;
            z-index: 100;
        }

        .window.show {
            display: block;
        }

        .window.active {
            z-index: 200;
        }

        .window-header {
            height: 20px;
            background: linear-gradient(90deg, #0000ff, #8080ff);
            color: white;
            display: flex;
            align-items: center;
            padding: 0 4px;
            cursor: move;
        }

        .window-header.inactive {
            background: linear-gradient(90deg, #808080, #c0c0c0);
        }

        .window-title {
            flex: 1;
            font-size: 11px;
            font-weight: bold;
        }

        .window-controls {
            display: flex;
            gap: 2px;
        }

        .window-control {
            width: 16px;
            height: 14px;
            background: #c0c0c0;
            border: 1px outset #c0c0c0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 8px;
            font-weight: bold;
        }

        .window-control:active {
            border: 1px inset #c0c0c0;
        }

        .window-content {
            padding: 8px;
            height: calc(100% - 20px);
            overflow: auto;
        }

        .notepad-content {
            width: 100%;
            height: 100%;
            border: 1px inset #c0c0c0;
            padding: 4px;
            font-family: 'Courier New', monospace;
            font-size: 12px;
            resize: none;
            background: white;
        }

        .calculator {
            width: 200px !important;
            height: 250px !important;
        }

        .calc-display {
            width: 100%;
            height: 30px;
            border: 1px inset #c0c0c0;
            text-align: right;
            padding: 4px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            margin-bottom: 8px;
            background: white;
        }

        .calc-buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 2px;
        }

        .calc-button {
            height: 30px;
            background: #c0c0c0;
            border: 2px outset #c0c0c0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .calc-button:active {
            border: 2px inset #c0c0c0;
        }

        .my-computer-content {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            padding: 16px;
        }

        .drive-icon {
            width: 64px;
            text-align: center;
            cursor: pointer;
        }

        .drive-icon:hover {
            background: rgba(0, 0, 255, 0.1);
        }

        .drive-image {
            width: 32px;
            height: 32px;
            margin: 0 auto 4px;
            background: #c0c0c0;
            border: 1px solid #808080;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
</head>
<body>
    <div class="desktop" id="desktop">
        <!-- Desktop Icons -->
        <div class="desktop-icon" style="top: 20px; left: 20px;" data-program="mycomputer">
            <div class="icon-image">üíª</div>
            <div class="icon-label">My Computer</div>
        </div>
        
        <div class="desktop-icon" style="top: 120px; left: 20px;" data-program="notepad">
            <div class="icon-image">üìù</div>
            <div class="icon-label">Notepad</div>
        </div>
        
        <div class="desktop-icon" style="top: 220px; left: 20px;" data-program="calculator">
            <div class="icon-image">üî¢</div>
            <div class="icon-label">Calculator</div>
        </div>
        
        <div class="desktop-icon" style="top: 320px; left: 20px;" data-program="minesweeper">
            <div class="icon-image">üí£</div>
            <div class="icon-label">Minesweeper</div>
        </div>
    </div>

    <!-- Start Menu -->
    <div class="start-menu" id="startMenu">
        <div class="start-menu-header">Windows 98</div>
        <div class="start-menu-items">
            <div class="start-menu-item" data-program="notepad">Notepad</div>
            <div class="start-menu-item" data-program="calculator">Calculator</div>
            <div class="start-menu-item" data-program="mycomputer">My Computer</div>
            <div class="start-menu-item" data-program="minesweeper">Minesweeper</div>
            <hr style="margin: 4px 0;">
            <div class="start-menu-item">Shut Down...</div>
        </div>
    </div>

    <!-- Windows -->
    <div class="window" id="notepadWindow" style="top: 100px; left: 200px; width: 400px; height: 300px;">
        <div class="window-header">
            <div class="window-title">Untitled - Notepad</div>
            <div class="window-controls">
                <div class="window-control" data-action="minimize">_</div>
                <div class="window-control" data-action="maximize">‚ñ°</div>
                <div class="window-control" data-action="close">√ó</div>
            </div>
        </div>
        <div class="window-content">
            <textarea class="notepad-content" placeholder="Type your text here..."></textarea>
        </div>
    </div>

    <div class="window calculator" id="calculatorWindow" style="top: 150px; left: 300px;">
        <div class="window-header">
            <div class="window-title">Calculator</div>
            <div class="window-controls">
                <div class="window-control" data-action="minimize">_</div>
                <div class="window-control" data-action="close">√ó</div>
            </div>
        </div>
        <div class="window-content">
            <input type="text" class="calc-display" id="calcDisplay" readonly value="0">
            <div class="calc-buttons">
                <div class="calc-button" data-action="clear">C</div>
                <div class="calc-button" data-action="plusminus">¬±</div>
                <div class="calc-button" data-action="percent">%</div>
                <div class="calc-button" data-action="divide">√∑</div>
                <div class="calc-button" data-number="7">7</div>
                <div class="calc-button" data-number="8">8</div>
                <div class="calc-button" data-number="9">9</div>
                <div class="calc-button" data-action="multiply">√ó</div>
                <div class="calc-button" data-number="4">4</div>
                <div class="calc-button" data-number="5">5</div>
                <div class="calc-button" data-number="6">6</div>
                <div class="calc-button" data-action="subtract">-</div>
                <div class="calc-button" data-number="1">1</div>
                <div class="calc-button" data-number="2">2</div>
                <div class="calc-button" data-number="3">3</div>
                <div class="calc-button" data-action="add">+</div>
                <div class="calc-button" data-number="0" style="grid-column: span 2;">0</div>
                <div class="calc-button" data-action="decimal">.</div>
                <div class="calc-button" data-action="equals">=</div>
            </div>
        </div>
    </div>

    <div class="window" id="mycomputerWindow" style="top: 120px; left: 250px; width: 500px; height: 350px;">
        <div class="window-header">
            <div class="window-title">My Computer</div>
            <div class="window-controls">
                <div class="window-control" data-action="minimize">_</div>
                <div class="window-control" data-action="maximize">‚ñ°</div>
                <div class="window-control" data-action="close">√ó</div>
            </div>
        </div>
        <div class="window-content">
            <div class="my-computer-content">
                <div class="drive-icon">
                    <div class="drive-image">üíæ</div>
                    <div>3¬Ω Floppy (A:)</div>
                </div>
                <div class="drive-icon">
                    <div class="drive-image">üíø</div>
                    <div>CD-ROM (D:)</div>
                </div>
                <div class="drive-icon">
                    <div class="drive-image">üóÑÔ∏è</div>
                    <div>Hard Disk (C:)</div>
                </div>
                <div class="drive-icon">
                    <div class="drive-image">üñ®Ô∏è</div>
                    <div>Printers</div>
                </div>
                <div class="drive-icon">
                    <div class="drive-image">üìû</div>
                    <div>Dial-Up Networking</div>
                </div>
            </div>
        </div>
    </div>

    <div class="window" id="minesweeperWindow" style="top: 80px; left: 400px; width: 300px; height: 250px;">
        <div class="window-header">
            <div class="window-title">Minesweeper</div>
            <div class="window-controls">
                <div class="window-control" data-action="minimize">_</div>
                <div class="window-control" data-action="close">√ó</div>
            </div>
        </div>
        <div class="window-content" style="text-align: center; padding-top: 50px;">
            <div style="font-size: 48px; margin-bottom: 20px;">üí£</div>
            <div>Classic Minesweeper</div>
            <div style="margin-top: 20px; color: #666;">Click the mines to play!</div>
            <div style="margin-top: 20px;">
                <button style="padding: 4px 8px; margin: 2px;">üí£</button>
                <button style="padding: 4px 8px; margin: 2px;">üí£</button>
                <button style="padding: 4px 8px; margin: 2px;">üí£</button>
            </div>
        </div>
    </div>

    <!-- Taskbar -->
    <div class="taskbar">
        <div class="start-button" id="startButton">Start</div>
        <div class="taskbar-tasks" id="taskbarTasks"></div>
        <div class="system-tray">
            <span>üîä</span>
            <span id="clock">12:00 PM</span>
        </div>
    </div>

    <script>
        // Global state
        let activeWindow = null;
        let zIndex = 100;
        let dragState = { isDragging: false, startX: 0, startY: 0, element: null };

        // Calculator state
        let calcState = { display: '0', operator: null, operand: null, waitingForOperand: false };

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            updateClock();
            setInterval(updateClock, 1000);
            setupEventListeners();
        });

        function updateClock() {
            const now = new Date();
            const timeString = now.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });
            document.getElementById('clock').textContent = timeString;
        }

        function setupEventListeners() {
            // Start button
            document.getElementById('startButton').addEventListener('click', toggleStartMenu);
            
            // Desktop icons
            document.querySelectorAll('.desktop-icon').forEach(icon => {
                icon.addEventListener('dblclick', () => openProgram(icon.dataset.program));
                icon.addEventListener('click', (e) => {
                    e.stopPropagation();
                    selectIcon(icon);
                });
            });

            // Start menu items
            document.querySelectorAll('.start-menu-item').forEach(item => {
                item.addEventListener('click', () => {
                    if (item.dataset.program) {
                        openProgram(item.dataset.program);
                    }
                    hideStartMenu();
                });
            });

            // Window controls
            document.querySelectorAll('.window-control').forEach(control => {
                control.addEventListener('click', (e) => {
                    e.stopPropagation();
                    const action = control.dataset.action;
                    const window = control.closest('.window');
                    handleWindowControl(window, action);
                });
            });

            // Window headers for dragging
            document.querySelectorAll('.window-header').forEach(header => {
                header.addEventListener('mousedown', startDrag);
            });

            // Calculator buttons
            document.querySelectorAll('.calc-button').forEach(button => {
                button.addEventListener('click', () => handleCalculatorInput(button));
            });

            // Close start menu when clicking elsewhere
            document.addEventListener('click', (e) => {
                if (!e.target.closest('.start-menu') && !e.target.closest('.start-button')) {
                    hideStartMenu();
                }
                if (!e.target.closest('.desktop-icon')) {
                    clearIconSelection();
                }
            });

            // Window focus
            document.querySelectorAll('.window').forEach(window => {
                window.addEventListener('mousedown', () => focusWindow(window));
            });

            // Mouse events for dragging
            document.addEventListener('mousemove', handleDrag);
            document.addEventListener('mouseup', endDrag);
        }

        function toggleStartMenu() {
            const startMenu = document.getElementById('startMenu');
            const startButton = document.getElementById('startButton');
            
            if (startMenu.classList.contains('show')) {
                hideStartMenu();
            } else {
                startMenu.classList.add('show');
                startButton.classList.add('active');
            }
        }

        function hideStartMenu() {
            document.getElementById('startMenu').classList.remove('show');
            document.getElementById('startButton').classList.remove('active');
        }

        function selectIcon(icon) {
            clearIconSelection();
            icon.classList.add('selected');
        }

        function clearIconSelection() {
            document.querySelectorAll('.desktop-icon').forEach(icon => {
                icon.classList.remove('selected');
            });
        }

        function openProgram(program) {
            const windowId = program + 'Window';
            const window = document.getElementById(windowId);
            
            if (window) {
                window.classList.add('show');
                focusWindow(window);
                addTaskbarButton(program, window);
            }
        }

        function addTaskbarButton(program, window) {
            const taskbar = document.getElementById('taskbarTasks');
            let button = document.querySelector(`[data-window="${program}"]`);
            
            if (!button) {
                button = document.createElement('div');
                button.className = 'task-button';
                button.dataset.window = program;
                button.textContent = getWindowTitle(program);
                button.addEventListener('click', () => toggleWindow(window));
                taskbar.appendChild(button);
            }
            button.classList.add('active');
        }

        function removeTaskbarButton(program) {
            const button = document.querySelector(`[data-window="${program}"]`);
            if (button) {
                button.remove();
            }
        }

        function getWindowTitle(program) {
            const titles = {
                notepad: 'Notepad',
                calculator: 'Calculator',
                mycomputer: 'My Computer',
                minesweeper: 'Minesweeper'
            };
            return titles[program] || program;
        }

        function toggleWindow(window) {
            if (window.classList.contains('show') && activeWindow === window) {
                minimizeWindow(window);
            } else {
                window.classList.add('show');
                focusWindow(window);
            }
        }

        function focusWindow(window) {
            // Remove active class from all windows
            document.querySelectorAll('.window').forEach(w => {
                w.classList.remove('active');
                w.querySelector('.window-header').classList.add('inactive');
            });
            
            // Update taskbar buttons
            document.querySelectorAll('.task-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Activate clicked window
            window.classList.add('active');
            window.style.zIndex = ++zIndex;
            window.querySelector('.window-header').classList.remove('inactive');
            activeWindow = window;
            
            // Activate corresponding taskbar button
            const program = window.id.replace('Window', '');
            const button = document.querySelector(`[data-window="${program}"]`);
            if (button) {
                button.classList.add('active');
            }
        }

        function minimizeWindow(window) {
            window.classList.remove('show');
            const program = window.id.replace('Window', '');
            const button = document.querySelector(`[data-window="${program}"]`);
            if (button) {
                button.classList.remove('active');
            }
        }

        function closeWindow(window) {
            window.classList.remove('show');
            const program = window.id.replace('Window', '');
            removeTaskbarButton(program);
            if (activeWindow === window) {
                activeWindow = null;
            }
        }

        function handleWindowControl(window, action) {
            switch (action) {
                case 'minimize':
                    minimizeWindow(window);
                    break;
                case 'maximize':
                    // Simple maximize toggle
                    if (window.style.width === '100vw') {
                        window.style.width = '';
                        window.style.height = '';
                        window.style.top = '';
                        window.style.left = '';
                    } else {
                        window.style.width = '100vw';
                        window.style.height = 'calc(100vh - 30px)';
                        window.style.top = '0';
                        window.style.left = '0';
                    }
                    break;
                case 'close':
                    closeWindow(window);
                    break;
            }
        }

        function startDrag(e) {
            const window = e.target.closest('.window');
            if (window && e.target.closest('.window-header')) {
                dragState.isDragging = true;
                dragState.element = window;
                dragState.startX = e.clientX - window.offsetLeft;
                dragState.startY = e.clientY - window.offsetTop;
                focusWindow(window);
            }
        }

        function handleDrag(e) {
            if (dragState.isDragging && dragState.element) {
                const newX = e.clientX - dragState.startX;
                const newY = e.clientY - dragState.startY;
                dragState.element.style.left = Math.max(0, newX) + 'px';
                dragState.element.style.top = Math.max(0, newY) + 'px';
            }
        }

        function endDrag() {
            dragState.isDragging = false;
            dragState.element = null;
        }

        function handleCalculatorInput(button) {
            if (button.dataset.number) {
                inputNumber(button.dataset.number);
            } else if (button.dataset.action) {
                handleCalculatorAction(button.dataset.action);
            }
        }

        function inputNumber(num) {
            if (calcState.waitingForOperand) {
                calcState.display = num;
                calcState.waitingForOperand = false;
            } else {
                calcState.display = calcState.display === '0' ? num : calcState.display + num;
            }
            updateCalculatorDisplay();
        }

        function handleCalculatorAction(action) {
            const inputValue = parseFloat(calcState.display);

            switch (action) {
                case 'clear':
                    calcState = { display: '0', operator: null, operand: null, waitingForOperand: false };
                    break;
                case 'decimal':
                    if (calcState.display.indexOf('.') === -1) {
                        calcState.display += '.';
                    }
                    break;
                case 'equals':
                    if (calcState.operator && !calcState.waitingForOperand) {
                        calcState.display = String(calculate(calcState.operand, inputValue, calcState.operator));
                        calcState.operator = null;
                        calcState.operand = null;
                        calcState.waitingForOperand = true;
                    }
                    break;
                case 'add':
                case 'subtract':
                case 'multiply':
                case 'divide':
                    if (calcState.operator && !calcState.waitingForOperand) {
                        calcState.display = String(calculate(calcState.operand, inputValue, calcState.operator));
                    }
                    calcState.operator = action;
                    calcState.operand = parseFloat(calcState.display);
                    calcState.waitingForOperand = true;
                    break;
            }
            updateCalculatorDisplay();
        }

        function calculate(firstOperand, secondOperand, operator) {
            switch (operator) {
                case 'add': return firstOperand + secondOperand;
                case 'subtract': return firstOperand - secondOperand;
                case 'multiply': return firstOperand * secondOperand;
                case 'divide': return firstOperand / secondOperand;
                default: return secondOperand;
            }
        }

        function updateCalculatorDisplay() {
            document.getElementById('calcDisplay').value = calcState.display;
        }
    </script>
</body>
</html>
